#!/usr/bin/env perl

use common::sense;

use Dir::Self;
use File::Find;

sub abs_path {
   use Cwd;
   my $path = Cwd::abs_path @_;
   -f $path or die "could not find template file: $path";
   $path
}

my %licences;
find sub {
   $licences{$_} = abs_path $_
      if /^COPYING\./
}, __DIR__ . '/../licences';
my $contributing = abs_path (__DIR__ . '/../CONTRIBUTING.md');

find sub {
   if (/^COPYING\./) {
      return if $File::Find::dir =~ m|obuild/licences|;

      my @authors = `git log | grep '^Author:'`;
      s/^Author: // for @authors;

      # Find out who committed most.
      my $author = do {
         my %count;
         $count{$_}++ for @authors;

         my ($max, $author) = (0, undef);
         for (keys %count) {
            if ($count{$_} > $max) {
               $max = $count{$_};
               $author = $_;
            }
         }

         $author
      };

      my %authors = map { $_ => undef } @authors;
      delete $authors{$author}; # remove author, the rest are contributors
      @authors = sort keys %authors;

      open my $template, '<', $licences{$_}
         or die "cannot open licence template for $_: $!";
      open my $licence, '>', $_
         or die "cannot open licence file $File::Find::name: $!";

      while (<$template>) {
         print $licence $_;
      }

      print $licence "\t$author";
      if (@authors) {
         print $licence "\nContributors:\n";
         for (@authors) {
            print $licence "\t$_";
         }
      }
   } elsif ($_ eq "CONTRIBUTING.md") {
      return if Cwd::abs_path $_ eq $contributing;
      system "cp", $contributing, $_;
   }
}, 'src';
