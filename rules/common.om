# Installation prefix.
if $(not $(defined prefix)):
  prefix	= /usr/local
  export

# The obuild root directory.
if $(not $(defined rootdir)):
  eprintln ($"[0;31m--- fatal error:[0m run obuild, not omake directly")
  exit 1
rootdir		= $(dir $(rootdir))

# The root directory of the current project
if $(not $(defined projdir)):
  projdir	= .
  export projdir
projdir		= $(dir $(projdir))

# Script directory.
scriptdir	= $(rootdir)/script

# Build directory.
builddir	= $(dir $(projdir)/_build)
# Directory to stage an install.
stagingdir	= $(dir $(projdir)/_install)
# Source directory.
srcdir		= $(dir $(projdir))
# Testsuite report directory.
testresultdir	= $(dir $(projdir)/_tests)

# Actual source directories.
srcdirs		= $(subdirs PC, $(srcdir))
top-srcdirs	= $(glob PCD, $(srcdir)/*)

# Derived directories.
bindir		= $(stagingdir)/bin
libdir		= $(stagingdir)/lib
includedir	= $(stagingdir)/include
datadir		= $(stagingdir)/share

# Absolute pathnames for the above.
abs_bindir	= $(absname $(bindir))
abs_libdir	= $(absname $(libdir))
abs_includedir	= $(absname $(includedir))
abs_datadir	= $(absname $(datadir))

# Recursive subdirectories
recurse-subdirs	= $(EMPTY)

compute-recurse-subdirs (sources) =
  recurse-subdirs += $(dir $(filter-out ., $(set $(dirname $(sources)))))
  export recurse-subdirs


# Clone directory hierarchy into vpath.
mkdir -p $(addprefix $(builddir)/, $(srcdirs))

# Build the project out-of-tree.
if $(not $(equal $(builddir), $(rootdir))):
  vmount (-l, $(srcdir), $(builddir)/$(srcdir))
  export

# Avoid omake complaining that the current directory is
# not part of the project.
add-project-directories (.)

# Get a build directory in the source path.
srcname-of (path) =
  removeprefix ($(fullname $(builddir)), $(fullname $(path)))

# Get source path of $(path) relative to current directory.
srcpath-of (path) =
  file ($(addprefix $(srcdir), $(srcname-of $(path))))

# Topological sort in build order.
link-sort (objects) =
  file-sort (.BUILDORDER, $(objects))

.PHONY: nop upload install

install:
  if $(file-exists $(bindir)):
    mkdir $(DESTDIR)$(prefix)/bin
    foreach (bin => ..., $(glob $(bindir)/*)):
      install $(bin) $(DESTDIR)$(prefix)/bin/
  if $(file-exists $(libdir)/pkg-config):
    mkdir $(DESTDIR)$(prefix)/lib
    foreach (lib => ..., $(glob $(libdir)/*.*)):
      install $(lib) $(DESTDIR)$(prefix)/lib/
