private.PROGS_INSTALLED	=
  query (-kind program-install -names)


project-root () =
  %.missing:
    if $(not $(file-exists $@)):
      fh = $(fopen $@, w)
      fprintln ($(fh), $"""#!/bin/sh""")
      fprintln ($(fh), $"""echo '[0;31m--- error:[0m your system is missing the program "$(removesuffix $@)"'""")
      fprintln ($(fh), $"""exit 1""")
      close ($(fh))
      chmod 0700 $@
  export .RULE
  recurse ()


find-prog (name, progs) =
  msg-checking (for $(name))
  foreach (p => ..., $(progs)):
    if $(mem $p, $(PROGS_INSTALLED)):
      msg-found (built in this project)
      return $(bindir)/$p$(EXEEXT)
    WHERE = $(where $p)
    if $(nonempty $(WHERE)):
      WHERE = $(nth 0, $(WHERE))
      msg-found ($(WHERE))
      return $(WHERE)
  msg-found (false)

  value $(builddir)/$(name).missing


check-prog (progs) =
  find-prog ($(nth 0, $(progs)), $(progs))


has-prog (prog) =
  match $(prog)
  case $"$(builddir)/[^/]*\.missing":
    value false
  default:
    value true


switch $(OSTYPE)
case Win32:
  # Extension for executable files.
  EXEEXT	= .exe
  # Compiled object extension.
  OBJEXT	= .obj
  # Extension for static/shared libraries.
  LIBEXT	= .lib
  DLLEXT	= .dll
  # Default prefix for libraries.
  LIBPRE	=
  DLLPRE	=
  export
case Unix:
  EXEEXT	=
  OBJEXT	= .o
  LIBEXT	= .a
  DLLEXT	= .so
  LIBPRE	= lib
  DLLPRE	= lib
  export
default:
  msg-error (unknown system: $(OSTYPE))


static.	=
  PERL		= $(check-prog perl perl5)
  PKGCONFIG	= $(check-prog pkg-config)

pkg-exists (pkg) =
  shell-success ($(PKGCONFIG) $(pkg))

pkg-config (pkg) =
  shell ($(PKGCONFIG) $(pkg))
