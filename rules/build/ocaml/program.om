open rules/build/ocaml/compile


private.LINKPKG () =
  if $(nonempty $(OCaml-Requires)):
    value -linkpkg


###########################################################
# :: OCaml program
###########################################################

private.ocaml-byte (BASENAMES) =
  private.BIN		= $(Name).byte$(EXEEXT)
  private.OBJECTS	= $(addsuffix .cmo, $(BASENAMES))

  $(BIN): $(OBJECTS)
    $(OCamlC) $(ocaml-link $(OBJECTS)) -o $@ $(LINKPKG)

  value $(BIN)


private.ocaml-native (BASENAMES) =
  private.BIN		= $(Name).native$(EXEEXT)
  private.OBJECTS	= $(addsuffix .cmx, $(BASENAMES))
  private.COBJECTS	= $(addsuffix .o, $(BASENAMES))

  $(BIN): $(OBJECTS) $(COBJECTS)
    $(OCamlOpt) $(ocaml-link $(OBJECTS)) -o $@ $(LINKPKG)

  value $(BIN)


ocaml-program () =
  private.FILES[]	= $(EMPTY)
  private.BASENAMES	= $(ocaml-basenames)

  # Select which files to build.
  if $(OCAML_NATIVE):
    FILES += $(ocaml-native $(BASENAMES))
    export FILES
  if $(OCAML_BYTE):
    FILES += $(ocaml-byte $(BASENAMES))
    export FILES

  value $(FILES)


ocaml-program-install () =
  private.PROGRAMS	= $(install-target $(bindir), $(ocaml-program))
  private.MAIN		= $(bindir)/$(Name)$(EXEEXT)

  # Link the first program to the name without .native or .byte.
  $(MAIN): $(PROGRAMS)
    ln-or-cp $< $@

  value $(MAIN) $(PROGRAMS)
