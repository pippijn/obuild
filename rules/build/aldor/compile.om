###########################################################
# :: Compute each object's target-local dependencies.
###########################################################

dependencies-local (target) =
  .STATIC: :key: $(fullname $(target))
    DEPS		= $(EMPTY)
    LOCALDOMAINS	= $(basename $(InternalDomains) $(Domains))
    foreach (d, $(dependencies-all $(target))):
      if $(equal .ao, $(suffix $d)):
        if $(mem $(basename $(removesuffix $d)), $(LOCALDOMAINS)):
          DEPS = $(DEPS) $d
          export
        export
      export
    #eprintln ($"$(target) -> $(DEPS)")
    result = $(link-sort $(filter-out $(target), $(DEPS)))
  value $(result)


###########################################################
# :: Aldor compilation rules.
###########################################################

%.c %.ao %.fm: %.as $(ALDOR)
  section rule:
    # Aldor compiler library
    private.LIBALCOMP =
      if $(mem alcomp, $(C_LIBS_INSTALLED)):
        value $(libdir)/$(dllname alcomp)

    if $(EntryPoint):
      # This is a program.
      %.c %.ao %.fm: %.as $(ALDOR) $(LIBALCOMP)
        $(ALDOR)			\
          -Fao -Ffm -Fc			\
          -Mno-ALDOR_W_NotCreatingFile	\
          -Mno-ALDOR_W_WillObsolete	\
          $(AFLAGS)			\
          $(ALDOROPT)			\
          $(USERFLAGS)			\
          -I$(curdir)/include		\
          -I$(includedir)		\
          $<

    else
      # Otherwise, it's a library.
      %.c %.ao %.fm: %.as $(ALDOR) $(LIBALCOMP)
        $(AR) cr lib$(Name)_$*.al $(dependencies-local $*.ao)
        $(ALDOR)			\
          -Fao -Ffm -Fc			\
          -Mno-ALDOR_W_WillObsolete	\
          -L$(AldorName)Lib=$(Name)_$*	\
          $(AFLAGS)			\
          $(ALDOROPT)			\
          $(USERFLAGS)			\
          -I$(curdir)/include		\
          -I$(includedir)		\
          -DBuild$(AldorName)Lib	\
          $<
        rm -f lib$(Name)_$*.al


# C main() function.
%main.c: %.ao $(ALDOR)
  $(ALDOR)				\
    -Fmain				\
    -Mno-ALDOR_W_NotCreatingFile	\
    -Mno-ALDOR_W_WillObsolete		\
    $<
  mv aldormain.c $@
