# Debugger to run the aldor compiler in.
DBG = $(EMPTY)

private.local_AFLAGS[] =
  -Waudit
  -Wcheck
  -Wno-fatal
  #-Wdebug
  -I$(includedir)

AS_OUTPUTS[] =
  ai
  ao
  ap
  asy
  fm
  lsp

AX_OUTPUTS[] =
  ao
  ap
  asy
  fm
  lsp

private.common_AFLAGS[] =
  -Mno-ALDOR_W_NotCreatingFile
  -Mno-ALDOR_W_WillObsolete
  -B$(stagingdir)


###########################################################
# :: Compute each object's target-local dependencies.
###########################################################

dependencies-local (target) =
  .STATIC: :key: $(fullname $(target))
    DEPS		= $(EMPTY)
    LOCALDOMAINS	= $(basename $(InternalDomains) $(Domains))
    foreach (d, $(dependencies-all $(target))):
      if $(equal .ao, $(suffix $d)):
        if $(mem $(basename $(removesuffix $d)), $(LOCALDOMAINS)):
          DEPS = $(DEPS) $d
          export
        export
      export
    #eprintln ($"$(target) -> $(DEPS)")
    result = $(link-sort $(filter-out $(target), $(DEPS)))
  value $(result)


###########################################################
# :: Aldor compilation rules.
###########################################################

create-aldor-rule (outputs, input) =
  if $(EntryPoint):
    # This is a program.
    $(addprefix %., $(outputs)): %.$(input) $(ALDOR)
      $(DBG) $(ALDOR)			\
        $(common_AFLAGS)		\
        $(addprefix -F, $(outputs))	\
        $(local_AFLAGS)			\
        $(om_AFLAGS)			\
        $(ALDOROPT)			\
        $(USERFLAGS)			\
        -I$(curdir)/include		\
        $<
  else
    # Otherwise, it's a library, so we create the
    # temporary dependency archive.
    $(addprefix %., $(outputs)): %.$(input) $(ALDOR)
      $(AR) cr lib$(Name)_$*.al $(dependencies-local $*.ao)
      $(DBG) $(ALDOR)			\
        $(common_AFLAGS)		\
        $(addprefix -F, $(outputs))	\
        $(local_AFLAGS)			\
        $(om_AFLAGS)			\
        $(ALDOROPT)			\
        $(USERFLAGS)			\
        -I$(curdir)/include		\
        -L$(AldorName)Lib=$(Name)_$*	\
        -DBuild$(AldorName)Lib		\
        $<
      rm -f lib$(Name)_$*.al


$(addprefix %., $(AS_OUTPUTS)): %.as $(ALDOR)
  section rule:
    create-aldor-rule ($(AS_OUTPUTS), as)

$(addprefix %., $(AX_OUTPUTS)): %.ax $(ALDOR)
  section rule:
    create-aldor-rule ($(AX_OUTPUTS), ax)


%.c: %.ao $(ALDOR)
  $(ALDOR)				\
    $(common_AFLAGS)			\
    -Fc					\
    $<

# C main() function.
%main.c: %.ao $(ALDOR)
  $(ALDOR)				\
    $(common_AFLAGS)			\
    -Fmain				\
    $<
  mv aldormain.c $@
