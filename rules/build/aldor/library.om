open rules/build/aldor/compile

# Build C library from Aldor sources.
ALDOR_CLIB = true
# Build Java library from Aldor sources.
ALDOR_JLIB = false


private.aldor-c-library () =
  # Make sure the language is not guessed as Aldor.
  MainLanguage	= c
  Languages	= $(set $(filter-out aldor, $(Languages)) c)

  # Build only static C libraries for Aldor libraries.
  STATIC = true
  SHARED = false

  library ()


private.aldor-java-library () =
  private.JLIBRARY	= $(Name).jar
  private.CLASSES	= $(addsuffix .class, $(Domains))
  private.RENAMED	= $(addprefix classes/, $(basename $(CLASSES)))
  private.SOURCES	= $(addsuffix .java, $(Domains))

  classes:
    mkdir -p $@

  clean:
    rm -rf classes
    java-clean ($(Domains))

  $(CLASSES): $(libdir)/foamj.jar $(SOURCES) classes
    javac -cp $(libdir)/foamj.jar $(SOURCES)

  $(RENAMED): $(CLASSES)
    flatten-classpath (classes, $(Domains))

  $(JLIBRARY): $(RENAMED)
    jar-renamed (classes, $@, $(Domains))

  value $(JLIBRARY)



aldor-library () =
  private.ALIBRARY = lib$(Name).al

  $(ALIBRARY): $(addsuffix .ao, $(Domains))
    $(AR) cr $@ $(link-sort $^)

  private.FILES[] = $(ALIBRARY)
  if $(ALDOR_CLIB):
    FILES += $(aldor-c-library)
    export FILES
  if $(ALDOR_JLIB):
    FILES += $(aldor-java-library)
    export FILES

  # Every Aldor library needs the include+src layout.
  recurse-into (include src)

  if $(file-exists testsuite):
    .SUBDIRS: testsuite

  value $(FILES)


aldor-library-install () =
  private.LIBS = $(aldor-library)

  private.FILES = $(install-target $(includedir), $(addsuffix .as, $(Interfaces)))
  private.FILES += $(install-target $(libdir), $(LIBS))

  install-pkg-config ($(FILES))
