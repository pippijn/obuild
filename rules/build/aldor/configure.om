static.	=
  ALDOR			= $(check-prog aldor)

ALDOROPT		= -Q8 -Qinline-all
EXTRADEP		= $(EMPTY)

# User
AFLAGS			= $(EMPTY)
# Developer
OM_AFLAGS		= $(EMPTY)
# Build system
om_AFLAGS		= $`(OM_AFLAGS) $`(AFLAGS)

AldorName		= $`(capitalize $(Name))
EntryPoint		= $(EMPTY)
Domains[]		= $(EMPTY)
InternalDomains[]	= $(EMPTY)
Aldor-Requires[]	= $(EMPTY)
Interfaces[]		= $(EMPTY)
Includes[]		= $(EMPTY)

#setenv (ALDOR_TERM, Aldor xterm)
#setenv (ALDOR_TERMINFO, $(absname $(includedir)/sample.terminfo))
#setenv (ALDORROOT, $(stagingdir))


private.resolve-source (domains) =
  foreach (d, $(domains)):
    if $(target-exists $d.as):
      # Common case
      value $d.as
    elseif $(target-exists $d.ax):
      # Already parsed (same as .ap)
      value $d.ax
    else
      # Just assume we don't know about it, yet, but it will exist.
      msg-warn ($"no source file for domain $d exists, yet; assuming $d.as will be built")
      value $d.as


aldor-prepare () =
  private.DEPLIBS = $(pkg-config-name $(Aldor-Requires))

  # Actual Aldor sources to be compiled.
  private.ASOURCES	= $(resolve-source $(InternalDomains) $(Domains))
  # All Aldor object files, including internal ones.
  private.AOBJECTS	= $(addsuffix .ao, $(InternalDomains) $(Domains))

  # Other Aldor source files to be included.
  private.INCLUDES	= $(addsuffix .as, $(Includes) $(Interfaces))

  # Scanner rules.
  if $(file-exists .depend.om):
    .SCANNER: scan-aldor: $(ASOURCES) $(INCLUDES) .depend.om
      cat .depend.om
      echo $"$(AOBJECTS): $(DEPLIBS) $(EXTRADEP)"
  else
    .SCANNER: scan-aldor: $(ASOURCES) $(INCLUDES) $(scriptdir)/aldep
      # TODO
      #$(scriptdir)/aldep $(ASOURCES)
      echo $"$(AOBJECTS): $(DEPLIBS) $(EXTRADEP)"

  %.c %.ao %.fm: :scanner: scan-aldor
  %$(OBJEXT): $(find-c-package runtime) 

  C-Requires	= $(Aldor-Requires) $(C-Requires) m runtime
  Sources	+= $(addsuffix .c, $(Domains))

  export
