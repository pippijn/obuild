.STATIC:
  ALDOR			= $(check-prog aldor)

ALDOROPT		= -Q8 -Qinline-all
EXTRADEP		= $(EMPTY)

# User
AFLAGS			= $(EMPTY)
# Developer
OM_AFLAGS		= $(EMPTY)
# Build system
om_AFLAGS		= $`(OM_AFLAGS) $`(AFLAGS)

AldorName		= $`(capitalize $(Name))
EntryPoint		= $(EMPTY)
Domains[]		= $(EMPTY)
InternalDomains[]	= $(EMPTY)
Aldor-Requires[]	= $(EMPTY)
Interfaces[]		= $(EMPTY)
Includes[]		= $(EMPTY)

#setenv (ALDOR_TERM, Aldor xterm)
#setenv (ALDOR_TERMINFO, $(absname $(includedir)/sample.terminfo))


aldor-prepare () =
  private.DEPLIBS = $(pkg-config-name $(Aldor-Requires))

  # Actual Aldor sources to be compiled.
  private.ASOURCES	= $(addsuffix .as, $(InternalDomains) $(Domains))
  # All Aldor object files, including internal ones.
  private.AOBJECTS	= $(addsuffix .ao, $(InternalDomains) $(Domains))

  # Other Aldor source files to be included.
  private.INCLUDES	= $(addsuffix .as, $(Includes) $(Interfaces))

  # Scanner rules.
  if $(file-exists .depend.om):
    .SCANNER: scan-aldor: $(ASOURCES) $(INCLUDES) .depend.om
      cat .depend.om
      echo $"$(AOBJECTS): $(DEPLIBS) $(EXTRADEP)"
  else
    .SCANNER: scan-aldor: $(ASOURCES) $(INCLUDES) $(scriptdir)/aldep
      # TODO
      #$(scriptdir)/aldep $(ASOURCES)
      echo $"$(AOBJECTS): $(DEPLIBS) $(EXTRADEP)"

  %.c %.ao %.fm: :scanner: scan-aldor

  C-Requires	= $(Aldor-Requires) $(C-Requires) m runtime
  Sources	+= $(addsuffix .c, $(Domains))

  export
