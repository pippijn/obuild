static.	=
  ALDOR			= $(check-prog aldor)

ALDOROPT		= -Q8
EXTRADEP		= $(EMPTY)

# User
AFLAGS			= $(EMPTY)
# Developer
OM_AFLAGS		= $(EMPTY)
# Build system
om_AFLAGS		= $`(OM_AFLAGS) $`(AFLAGS)

AldorName		= $`(capitalize $(Name))
Aldor-Sources[]		= $(EMPTY)
InternalDomains[]	= $(EMPTY)
Aldor-Requires[]	= $(EMPTY)
Interfaces[]		= $(EMPTY)
Includes[]		= $(EMPTY)

#setenv (ALDOR_TERM, Aldor xterm)
#setenv (ALDOR_TERMINFO, $(absname $(includedir)/sample.terminfo))
#setenv (ALDORROOT, $(stagingdir))


private.resolve-source (domains) =
  foreach (d => ..., $(domains)):
    if $(target-exists $d.as):
      # Common case
      value $d.as
    elseif $(target-exists $d.ax):
      # Already parsed (same as .ap)
      value $d.ax
    else
      # Just assume we don't know about it, yet, but it will exist.
      msg-warn ($"no source file for domain $d exists, yet; assuming $d.as will be built")
      value $d.as


aldor-prepare () =
  export

  # Generate rules here, so we don't need to use dynamic
  # rules (they are quite much slower).
  aldor-build-rule (as, $(AS_OUTPUTS))
  aldor-build-rule (ax, $(AX_OUTPUTS))

  if $(nonempty $(Aldor-Sources)):
    private.DEPLIBS = $(pkg-config-name $(Aldor-Requires))

    # Actual Aldor sources to be compiled.
    private.ASOURCES	= $(resolve-source $(InternalDomains) $(Aldor-Sources))
    # All Aldor object files, including internal ones.
    private.AOBJECTS	= $(addsuffix .ao, $(InternalDomains) $(Aldor-Sources))

    # Other Aldor source files to be included.
    private.INCLUDES	= $(addsuffix .as, $(Includes) $(Interfaces))

    # Scanner rules.
    if $(file-exists .depend.om):
      .SCANNER: scan-aldor: $(ASOURCES) $(INCLUDES) .depend.om
        cat .depend.om # custom
        #eprintln ($"$(AOBJECTS): $(DEPLIBS) $(EXTRADEP)")
        echo $"$(AOBJECTS): $(DEPLIBS) $(EXTRADEP)"
    else
      .SCANNER: scan-aldor: $(ASOURCES) $(INCLUDES) $(scriptdir)/aldep
        # TODO
        #$(scriptdir)/aldep $(ASOURCES)
        echo $"$(AOBJECTS): $(DEPLIBS) $(EXTRADEP)"

    # Every Aldor library needs the include+src layout.
    .SUBDIRS: $(set $(dirname $(ASOURCES) $(INCLUDES)))
      value

    %$(OBJEXT): $(find-c-package runtime) 

    C-Requires	= $(Aldor-Requires) $(C-Requires) m runtime
    C-Sources	+= $(addsuffix .c, $(Aldor-Sources))

    value true
