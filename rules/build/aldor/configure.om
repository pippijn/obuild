.STATIC:
  ALDOR			= $(check-prog aldor)

AFLAGS			= $(EMPTY)
ALDOROPT		= -Q8 -Qinline-all
EXTRADEP		= $(EMPTY)

AldorName		= $`(capitalize $(Name))
EntryPoint		= $(EMPTY)
Domains[]		= $(EMPTY)
InternalDomains[]	= $(EMPTY)
Aldor-Requires[]	= $(EMPTY)
Interfaces[]		= $(EMPTY)
Includes[]		= $(EMPTY)

#setenv (ALDOR_TERM, Aldor xterm)
#setenv (ALDOR_TERMINFO, $(absname $(includedir)/sample.terminfo))


aldor-prepare () =
  if $(nonempty $(Domains)):
    private.DEPLIBS =
      foreach (r, $(Aldor-Requires)):
        value $(pkg-config-dir)/$r.pc

    # Actual Aldor sources to be compiled.
    private.ASOURCES	= $(addsuffix .as, $(InternalDomains) $(Domains))
    # All Aldor object files, including internal ones.
    private.AOBJECTS	= $(addsuffix .ao, $(InternalDomains) $(Domains))

    # Other Aldor source files to be included.
    private.INCLUDES	= $(addsuffix .as, $(Includes) $(Interfaces))

    # Scanner rules.
    if $(file-exists .depend.om):
      .SCANNER: scan-aldor: $(ASOURCES) $(INCLUDES) .depend.om
        cat .depend.om
        echo $"$(AOBJECTS): $(DEPLIBS) $(EXTRADEP)"
    else
      .SCANNER: scan-aldor: $(ASOURCES) $(INCLUDES) $(scriptdir)/aldep
        # TODO
        #$(scriptdir)/aldep $(ASOURCES)
        echo $"$(AOBJECTS): $(DEPLIBS) $(EXTRADEP)"

    %.c %.ao %.fm: :scanner: scan-aldor

    C-Requires	+= $(Aldor-Requires)
    Sources	+= $(addsuffix .c, $(Domains))

    export
  export
