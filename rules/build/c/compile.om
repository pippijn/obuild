open rules/build/common

ABSNAME_SOURCES = false


###########################################################
# :: C/C++ dependency scanners
###########################################################

.SCANNER: scan-c-%: %.c
  $(CC)  $(om_CPPFLAGS) $(om_CFLAGS)   -MM $<

.SCANNER: scan-cxx-%: %.cpp
  $(CXX) $(om_CPPFLAGS) $(om_CXXFLAGS) -MM $<


###########################################################
# :: Compiling C sources
###########################################################

private.COMPILE-C = $`(CC) $`(om_CPPFLAGS) $`(om_CFLAGS) -c

if $(ABSNAME_SOURCES):
  %$(libsuffix)$(OBJEXT): %.c :scanner: scan-c-%
    $(COMPILE-C) $(absname $<) -o $@

  %$(dllsuffix)$(OBJEXT): %.c :scanner: scan-c-%
    $(COMPILE-C) $(absname $<) -o $@ -fPIC

  export .RULE
else
  %$(libsuffix)$(OBJEXT): %.c :scanner: scan-c-%
    $(COMPILE-C) $< -o $@

  %$(dllsuffix)$(OBJEXT): %.c :scanner: scan-c-%
    $(COMPILE-C) $< -o $@ -fPIC

  export .RULE


###########################################################
# :: Compiling C++ sources
###########################################################

private.COMPILE-CXX = $`(CXX) $`(om_CPPFLAGS) $`(om_CXXFLAGS) -c


if $(ABSNAME_SOURCES):
  %$(libsuffix)$(OBJEXT): %.cpp :scanner: scan-cxx-%
    $(COMPILE-CXX) $(absname $<) -o $@

  %$(dllsuffix)$(OBJEXT): %.cpp :scanner: scan-cxx-%
    $(COMPILE-CXX) $(absname $<) -o $@ -fPIC

  export .RULE
else
  %$(libsuffix)$(OBJEXT): %.cpp :scanner: scan-cxx-%
    $(COMPILE-CXX) $< -o $@

  %$(dllsuffix)$(OBJEXT): %.cpp :scanner: scan-cxx-%
    $(COMPILE-CXX) $< -o $@ -fPIC

  export .RULE
