# Language targets
Builders[]	= $(EMPTY)

# Main language of the target.
MainLanguage	= $(EMPTY)
# Other languages used for the target.
Languages[]	= $(EMPTY)


replacesuffix (new-suffix, sequence) =
  return $(addsuffix $(new-suffix), $(removesuffix $(sequence)))


# Guess languages used
private.guess-languages (sources) =
  .STATIC: :key: $(sources)
    guesses = $(MainLanguage)
    foreach (builder => ..., $(builders)):
      export guesses
      foreach (k => ..., builder.suffixes):
        foreach (s => ..., $(replacesuffix $k, $(sources))):
          if $(target-exists $s):
            guesses += $(builder.languages)
    guesses = $(set $(guesses))
    if $(not $(nonempty $(guesses))):
      msg-error (cannot guess any source language for $(Name))
    msg-notice (guessed source languages for $(Name) as $(guesses))
  return $(guesses)


# Guess main language
private.guess-language (languages) =
  .STATIC: :key: $(languages)
    result =
      if $(equal $(length $(languages)), 0):
        msg-error (no source languages for $(Name))
      if $(mem ocaml, $(languages)):
        value ocaml
      elseif $(mem cxx, $(languages)):
        value cxx
      elseif $(mem c, $(languages)):
        value c
      else
        msg-error (cannot guess main source language for $(Name): $(languages))
    msg-notice (guessed main language for $(Name) as $(result))
  value $(result)


target-common () =
  curdir = $(dir .)

  # If the target languages are not defined, try to guess them.
  if $(not $(nonempty $(Languages))):
    Languages = $(guess-languages $(Sources))
    export Languages

  # Determine the target's main language
  if $(not $(nonempty $(MainLanguage))):
    MainLanguage = $(guess-language $(Languages))
    export MainLanguage

  # Add "Sources" from other language-specific directives
  foreach (l => ..., $(Builders)):
    if $(intersects $(l.languages), $(Languages)):
      l.prepare ()
      export
    export

  # Find libraries
  foreach (l => ..., $(Builders)):
    l.configure ()
    export

  # Propagate dependencies to subdirs.
  recurse ()

  export
