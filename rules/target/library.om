open rules/target/common


private.language-library () =
  if $(equal ocaml, $(MainLanguage)):
    value $(ocaml-library)
  elseif $(equal aldor, $(MainLanguage)):
    value $(aldor-library)
  elseif $(or $(equal cxx, $(MainLanguage)), $(equal c, $(MainLanguage))):
    # C and C++ share rules.
    value $(c-library $(Name), $(Sources))
  else
    msg-error ($"no library rules for language: `$(MainLanguage)' for $(Name)")


private.language-library-install () =
  if $(equal ocaml, $(MainLanguage)):
    value $(ocaml-library-install)
  elseif $(equal aldor, $(MainLanguage)):
    value $(aldor-library-install)
  elseif $(or $(equal cxx, $(MainLanguage)), $(equal c, $(MainLanguage))):
    # C and C++ share rules.
    value $(c-library-install $(Name), $(Sources))
  else
    msg-error ($"no library rules for language: `$(MainLanguage)' for $(Name)")


library () =
  private.timer = $(timer-start library)

  # Initialise target.
  target-common ()
  # Make target.
  private.TARGET = $(language-library)

  timer-end ($(timer))

  # Export environment, return targets.
  value $(TARGET)
  export


library-install () =
  private.timer = $(timer-start library-install)

  # Initialise target.
  target-common ()
  # Make target.
  private.TARGET = $(language-library-install)

  timer-end ($(timer))

  # Export environment, return targets.
  value $(TARGET)
  export
