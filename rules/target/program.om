open rules/target/common


private.language-program () =
  if $(equal ocaml, $(Language)):
    value $(ocaml-program)
  elseif $(or $(equal cpp, $(Language)), $(equal c, $(Language))):
    # C and C++ share rules.
    value $(c-program)
  else
    msg-error ($"no program rules for language: `$(Language)' for $(Name)")


private.language-program-install () =
  if $(equal ocaml, $(Language)):
    value $(ocaml-program-install)
  elseif $(or $(equal cpp, $(Language)), $(equal c, $(Language))):
    # C and C++ share rules.
    value $(c-program-install)
  else
    msg-error ($"no program rules for language: `$(Language)' for $(Name)")


program (tag) =
  # Initialise target.
  target-common ()

  # Make target, bind to build-tag.
  private.TARGET = $(language-program)
  $(tag): $(TARGET)

  # Export environment, return targets.
  value $(TARGET)
  export


program-install (tag) =
  # Initialise target.
  target-common ()

  # Make target, bind to build-tag.
  private.TARGET = $(language-program-install)
  $(tag): $(TARGET)

  # Export environment, return targets.
  value $(TARGET)
  export
